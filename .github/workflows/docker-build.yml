name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ github.repository }}
  ECR_REPO_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate type definitions
        run: yarn tsc

      - name: Set image date
        id: image_date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Set image tag variables
        id: imagevars
        env:
          TZ: America/New_York
        run: |
          RAW_BRANCH="${GITHUB_REF##*/}"
          # Replace any character that is not a-z, A-Z, 0-9, - or _ with _
          SAFE_BRANCH=$(echo "$RAW_BRANCH" | sed 's/[^a-zA-Z0-9_-]/_/g')
          DATE=$(date +'%Y%m%d')
          echo "branch=$SAFE_BRANCH" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "repository_name=${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT

      - name: Build frontend
        run: yarn build
        working-directory: packages/app
        env:
          APP_VERSION: ${{ steps.imagevars.outputs.branch }}-${{ steps.imagevars.outputs.date }}.${{ github.run_number }}

      - name: Build backend
        run: yarn build:backend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          role-to-assume: arn:aws:iam::381492075615:role/GitHubActionsECRRole
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        shell: bash
        env: 
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ steps.imagevars.outputs.repository_name }}
          IMAGE_TAG: ${{ steps.imagevars.outputs.branch }}-${{ steps.imagevars.outputs.date }}.${{ github.run_number }}
          IMAGE_TAG_LATEST: ${{ steps.imagevars.outputs.branch }}-latest
        run: |
          docker build --build-arg APP_VERSION=$IMAGE_TAG -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG_LATEST
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG_LATEST

          echo "### Docker Image Built and Pushed" >> $GITHUB_STEP_SUMMARY
          echo "- **Image:** $REGISTRY/$REPOSITORY" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag 1:** $IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag 2:** $IMAGE_TAG_LATEST" >> $GITHUB_STEP_SUMMARY

      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.GITOPS_APP_ID }}
          private-key: ${{ secrets.GITOPS_PRIVATE_KEY }}
          owner: altimetrik-digital-enablement-demo-hub
          repositories: org-gitops

      - name: Debug - Check token and repository access
        run: |
          echo "Token created successfully"
          echo "Attempting to access repository: altimetrik-digital-enablement-demo-hub/org-gitops"
          curl -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/altimetrik-digital-enablement-demo-hub/org-gitops

      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: altimetrik-digital-enablement-demo-hub/org-gitops
          ref: main
          path: gitops
          token: ${{ steps.app-token.outputs.token }}

      - name: Set new image in kustomization.yaml
        env: 
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: ${{ steps.imagevars.outputs.repository_name }}
            IMAGE_TAG: ${{ steps.imagevars.outputs.branch }}-${{ steps.imagevars.outputs.date }}.${{ github.run_number }}
        run: |
          cd gitops/apps/dep-backstage/envs/dev
          kustomize edit set image ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Commit and push changes
        env: 
          IMAGE_TAG: ${{ steps.imagevars.outputs.branch }}-${{ steps.imagevars.outputs.date }}.${{ github.run_number }}
          REPOSITORY: ${{ steps.imagevars.outputs.repository_name }}
        run: |
          cd gitops
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add apps/dep-backstage/envs/dev/kustomization.yaml
          git commit -m "Update ${{ env.REPOSITORY }} image to ${{ env.IMAGE_TAG }}"
          git push origin main